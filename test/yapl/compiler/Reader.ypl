package yapl.compiler

class Reader(val source: String) {
	var offset: Number = 0
	var line: Number = 1
	var column: Number = 0

	fun peek() -> String = this->source[this->offset]

	fun next() -> String = if this->eof() then null else {
		val result = this->peek()
		this->offset = this->offset + 1
		result
	}

	fun eof() -> Boolean = this->offset == source->length

	fun take(char: String) -> Boolean = if this->peek() == char then {
		this->next()
		true
	} else false

	fun takeWhile(condition: Function) -> String {
		var result = ""
		while condition(val char = this->peek()) do {
			this->next()
			result = result ~ char
		}
		result
	}
}
